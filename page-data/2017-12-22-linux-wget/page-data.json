{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2017-12-22-linux-wget/",
    "result": {"data":{"site":{"siteMetadata":{"title":"YH.K Logs"}},"markdownRemark":{"id":"291842fb-173f-51f9-a089-54743192ffbc","excerpt":"설명 CUI환경에서 파일을 다운받을때 사용한다. 도움말 활용 예 영상 다운로드서버에 올라가있는 영상들이 정상적인지를 체크하기위해 한번씩 다운로드해준다. list.txt list에 써져있는 파일들을 차례대로 다운로드한 후 로그를 남긴다(성공여부만 필요) -i 인풋\n-o 아웃풋\n—no…","html":"<h3>설명</h3>\n<p>CUI환경에서 파일을 다운받을때 사용한다.</p>\n<h3>도움말</h3>\n<!-- more -->\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">wget</span> -help\n\nGNU Wget <span class=\"token number\">1.17</span>.1, a non-interactive network retriever.\nUsage: <span class=\"token function\">wget</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>URL<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.\n\nMandatory arguments to long options are mandatory <span class=\"token keyword\">for</span> short options too.\n\nStartup:\n  -V,  --version                   display the version of Wget and <span class=\"token builtin class-name\">exit</span>\n  -h,  --help                      print this <span class=\"token builtin class-name\">help</span>\n  -b,  --background                go to background after startup\n  -e,  --execute<span class=\"token operator\">=</span>COMMAND           execute a `.wgetrc<span class=\"token string\">'-style command\n\nLogging and input file:\n  -o,  --output-file=FILE          log messages to FILE\n  -a,  --append-output=FILE        append messages to FILE\n  -d,  --debug                     print lots of debugging information\n  -q,  --quiet                     quiet (no output)\n  -v,  --verbose                   be verbose (this is the default)\n  -nv, --no-verbose                turn off verboseness, without being quiet\n       --report-speed=TYPE         output bandwidth as TYPE.  TYPE can be bits\n  -i,  --input-file=FILE           download URLs found in local or external FILE\n  -F,  --force-html                treat input file as HTML\n  -B,  --base=URL                  resolves HTML input-file links (-i -F)\n                                     relative to URL\n       --config=FILE               specify config file to use\n       --no-config                 do not read any config file\n       --rejected-log=FILE         log reasons for URL rejection to FILE\n\nDownload:\n  -t,  --tries=NUMBER              set number of retries to NUMBER (0 unlimits)\n       --retry-connrefused         retry even if connection is refused\n  -O,  --output-document=FILE      write documents to FILE\n  -nc, --no-clobber                skip downloads that would download to\n                                     existing files (overwriting them)\n  -c,  --continue                  resume getting a partially-downloaded file\n       --start-pos=OFFSET          start downloading from zero-based position OFFSET\n       --progress=TYPE             select progress gauge type\n       --show-progress             display the progress bar in any verbosity mode\n  -N,  --timestamping              don'</span>t re-retrieve files unless newer than\n                                     <span class=\"token builtin class-name\">local</span>\n       --no-if-modified-since      don<span class=\"token string\">'t use conditional if-modified-since get\n                                     requests in timestamping mode\n       --no-use-server-timestamps  don'</span>t <span class=\"token builtin class-name\">set</span> the <span class=\"token builtin class-name\">local</span> <span class=\"token function\">file</span><span class=\"token string\">'s timestamp by\n                                     the one on the server\n  -S,  --server-response           print server response\n       --spider                    don'</span>t download anything\n  -T,  --timeout<span class=\"token operator\">=</span><span class=\"token environment constant\">SECONDS</span>           <span class=\"token builtin class-name\">set</span> all <span class=\"token function\">timeout</span> values to <span class=\"token environment constant\">SECONDS</span>\n       --dns-timeout<span class=\"token operator\">=</span>SECS          <span class=\"token builtin class-name\">set</span> the DNS lookup <span class=\"token function\">timeout</span> to SECS\n       --connect-timeout<span class=\"token operator\">=</span>SECS      <span class=\"token builtin class-name\">set</span> the connect <span class=\"token function\">timeout</span> to SECS\n       --read-timeout<span class=\"token operator\">=</span>SECS         <span class=\"token builtin class-name\">set</span> the <span class=\"token builtin class-name\">read</span> <span class=\"token function\">timeout</span> to SECS\n  -w,  --wait<span class=\"token operator\">=</span><span class=\"token environment constant\">SECONDS</span>              <span class=\"token function\">wait</span> <span class=\"token environment constant\">SECONDS</span> between retrievals\n       --waitretry<span class=\"token operator\">=</span><span class=\"token environment constant\">SECONDS</span>         <span class=\"token function\">wait</span> <span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token environment constant\">SECONDS</span> between retries of a retrieval\n       --random-wait               <span class=\"token function\">wait</span> from <span class=\"token number\">0.5</span>*WAIT<span class=\"token punctuation\">..</span>.1.5*WAIT secs between retrievals\n       --no-proxy                  explicitly turn off proxy\n  -Q,  --quota<span class=\"token operator\">=</span>NUMBER              <span class=\"token builtin class-name\">set</span> retrieval <span class=\"token function\">quota</span> to NUMBER\n       --bind-address<span class=\"token operator\">=</span>ADDRESS      <span class=\"token builtin class-name\">bind</span> to ADDRESS <span class=\"token punctuation\">(</span>hostname or IP<span class=\"token punctuation\">)</span> on <span class=\"token builtin class-name\">local</span> <span class=\"token function\">host</span>\n       --limit-rate<span class=\"token operator\">=</span>RATE           limit download rate to RATE\n       --no-dns-cache              disable caching DNS lookups\n       --restrict-file-names<span class=\"token operator\">=</span>OS    restrict chars <span class=\"token keyword\">in</span> <span class=\"token function\">file</span> names to ones OS allows\n       --ignore-case               ignore <span class=\"token keyword\">case</span> when matching files/directories\n  -4,  --inet4-only                connect only to IPv4 addresses\n  -6,  --inet6-only                connect only to IPv6 addresses\n       --prefer-family<span class=\"token operator\">=</span>FAMILY      connect first to addresses of specified family,\n                                     one of IPv6, IPv4, or none\n       --user<span class=\"token operator\">=</span><span class=\"token environment constant\">USER</span>                 <span class=\"token builtin class-name\">set</span> both <span class=\"token function\">ftp</span> and http user to <span class=\"token environment constant\">USER</span>\n       --password<span class=\"token operator\">=</span>PASS             <span class=\"token builtin class-name\">set</span> both <span class=\"token function\">ftp</span> and http password to PASS\n       --ask-password              prompt <span class=\"token keyword\">for</span> passwords\n       --no-iri                    turn off IRI support\n       --local-encoding<span class=\"token operator\">=</span>ENC        use ENC as the <span class=\"token builtin class-name\">local</span> encoding <span class=\"token keyword\">for</span> IRIs\n       --remote-encoding<span class=\"token operator\">=</span>ENC       use ENC as the default remote encoding\n       --unlink                    remove <span class=\"token function\">file</span> before clobber\n\nDirectories:\n  -nd, --no-directories            don<span class=\"token string\">'t create directories\n  -x,  --force-directories         force creation of directories\n  -nH, --no-host-directories       don'</span>t create <span class=\"token function\">host</span> directories\n       --protocol-directories      use protocol name <span class=\"token keyword\">in</span> directories\n  -P,  --directory-prefix<span class=\"token operator\">=</span>PREFIX   save files to PREFIX/<span class=\"token punctuation\">..</span>\n       --cut-dirs<span class=\"token operator\">=</span>NUMBER           ignore NUMBER remote directory components\n\nHTTP options:\n       --http-user<span class=\"token operator\">=</span><span class=\"token environment constant\">USER</span>            <span class=\"token builtin class-name\">set</span> http user to <span class=\"token environment constant\">USER</span>\n       --http-password<span class=\"token operator\">=</span>PASS        <span class=\"token builtin class-name\">set</span> http password to PASS\n       --no-cache                  disallow server-cached data\n       --default-page<span class=\"token operator\">=</span>NAME         change the default page name <span class=\"token punctuation\">(</span>normally\n                                     this is <span class=\"token string\">'index.html'</span><span class=\"token builtin class-name\">.</span><span class=\"token punctuation\">)</span>\n  -E,  --adjust-extension          save HTML/CSS documents with proper extensions\n       --ignore-length             ignore <span class=\"token string\">'Content-Length'</span> header field\n       --header<span class=\"token operator\">=</span>STRING             insert STRING among the headers\n       --max-redirect              maximum redirections allowed per page\n       --proxy-user<span class=\"token operator\">=</span><span class=\"token environment constant\">USER</span>           <span class=\"token builtin class-name\">set</span> <span class=\"token environment constant\">USER</span> as proxy username\n       --proxy-password<span class=\"token operator\">=</span>PASS       <span class=\"token builtin class-name\">set</span> PASS as proxy password\n       --referer<span class=\"token operator\">=</span>URL               include <span class=\"token string\">'Referer: URL'</span> header <span class=\"token keyword\">in</span> HTTP request\n       --save-headers              save the HTTP headers to <span class=\"token function\">file</span>\n  -U,  --user-agent<span class=\"token operator\">=</span>AGENT          identify as AGENT instead of Wget/VERSION\n       --no-http-keep-alive        disable HTTP keep-alive <span class=\"token punctuation\">(</span>persistent connections<span class=\"token punctuation\">)</span>\n       --no-cookies                don<span class=\"token string\">'t use cookies\n       --load-cookies=FILE         load cookies from FILE before session\n       --save-cookies=FILE         save cookies to FILE after session\n       --keep-session-cookies      load and save session (non-permanent) cookies\n       --post-data=STRING          use the POST method; send STRING as the data\n       --post-file=FILE            use the POST method; send contents of FILE\n       --method=HTTPMethod         use method \"HTTPMethod\" in the request\n       --body-data=STRING          send STRING as data. --method MUST be set\n       --body-file=FILE            send contents of FILE. --method MUST be set\n       --content-disposition       honor the Content-Disposition header when\n                                     choosing local file names (EXPERIMENTAL)\n       --content-on-error          output the received content on server errors\n       --auth-no-challenge         send Basic HTTP authentication information\n                                     without first waiting for the server'</span>s\n                                     challenge\n\nHTTPS <span class=\"token punctuation\">(</span>SSL/TLS<span class=\"token punctuation\">)</span> options:\n       --secure-protocol<span class=\"token operator\">=</span>PR        choose secure protocol, one of auto, SSLv2,\n                                     SSLv3, TLSv1 and PFS\n       --https-only                only follow secure HTTPS links\n       --no-check-certificate      don<span class=\"token string\">'t validate the server'</span>s certificate\n       --certificate<span class=\"token operator\">=</span>FILE          client certificate <span class=\"token function\">file</span>\n       --certificate-type<span class=\"token operator\">=</span>TYPE     client certificate type, PEM or DER\n       --private-key<span class=\"token operator\">=</span>FILE          private key <span class=\"token function\">file</span>\n       --private-key-type<span class=\"token operator\">=</span>TYPE     private key type, PEM or DER\n       --ca-certificate<span class=\"token operator\">=</span>FILE       <span class=\"token function\">file</span> with the bundle of CAs\n       --ca-directory<span class=\"token operator\">=</span>DIR          directory where <span class=\"token builtin class-name\">hash</span> list of CAs is stored\n       --crl-file<span class=\"token operator\">=</span>FILE             <span class=\"token function\">file</span> with bundle of CRLs\n       --random-file<span class=\"token operator\">=</span>FILE          <span class=\"token function\">file</span> with random data <span class=\"token keyword\">for</span> seeding the SSL PRNG\n       --egd-file<span class=\"token operator\">=</span>FILE             <span class=\"token function\">file</span> naming the EGD socket with random data\n\nHSTS options:\n       --no-hsts                   disable HSTS\n       --hsts-file                 path of HSTS database <span class=\"token punctuation\">(</span>will override default<span class=\"token punctuation\">)</span>\n\nFTP options:\n       --ftp-user<span class=\"token operator\">=</span><span class=\"token environment constant\">USER</span>             <span class=\"token builtin class-name\">set</span> <span class=\"token function\">ftp</span> user to <span class=\"token environment constant\">USER</span>\n       --ftp-password<span class=\"token operator\">=</span>PASS         <span class=\"token builtin class-name\">set</span> <span class=\"token function\">ftp</span> password to PASS\n       --no-remove-listing         don<span class=\"token string\">'t remove '</span>.listing<span class=\"token string\">' files\n       --no-glob                   turn off FTP file name globbing\n       --no-passive-ftp            disable the \"passive\" transfer mode\n       --preserve-permissions      preserve remote file permissions\n       --retr-symlinks             when recursing, get linked-to files (not dir)\n\nFTPS options:\n       --ftps-implicit                 use implicit FTPS (default port is 990)\n       --ftps-resume-ssl               resume the SSL/TLS session started in the control connection when\n                                         opening a data connection\n       --ftps-clear-data-connection    cipher the control channel only; all the data will be in plaintext\n       --ftps-fallback-to-ftp          fall back to FTP if FTPS is not supported in the target server\nWARC options:\n       --warc-file=FILENAME        save request/response data to a .warc.gz file\n       --warc-header=STRING        insert STRING into the warcinfo record\n       --warc-max-size=NUMBER      set maximum size of WARC files to NUMBER\n       --warc-cdx                  write CDX index files\n       --warc-dedup=FILENAME       do not store records listed in this CDX file\n       --no-warc-compression       do not compress WARC files with GZIP\n       --no-warc-digests           do not calculate SHA1 digests\n       --no-warc-keep-log          do not store the log file in a WARC record\n       --warc-tempdir=DIRECTORY    location for temporary files created by the\n                                     WARC writer\n\nRecursive download:\n  -r,  --recursive                 specify recursive download\n  -l,  --level=NUMBER              maximum recursion depth (inf or 0 for infinite)\n       --delete-after              delete files locally after downloading them\n  -k,  --convert-links             make links in downloaded HTML or CSS point to\n                                     local files\n       --convert-file-only         convert the file part of the URLs only (usually known as the basename)\n       --backups=N                 before writing file X, rotate up to N backup files\n  -K,  --backup-converted          before converting file X, back up as X.orig\n  -m,  --mirror                    shortcut for -N -r -l inf --no-remove-listing\n  -p,  --page-requisites           get all images, etc. needed to display HTML page\n       --strict-comments           turn on strict (SGML) handling of HTML comments\n\nRecursive accept/reject:\n  -A,  --accept=LIST               comma-separated list of accepted extensions\n  -R,  --reject=LIST               comma-separated list of rejected extensions\n       --accept-regex=REGEX        regex matching accepted URLs\n       --reject-regex=REGEX        regex matching rejected URLs\n       --regex-type=TYPE           regex type (posix|pcre)\n  -D,  --domains=LIST              comma-separated list of accepted domains\n       --exclude-domains=LIST      comma-separated list of rejected domains\n       --follow-ftp                follow FTP links from HTML documents\n       --follow-tags=LIST          comma-separated list of followed HTML tags\n       --ignore-tags=LIST          comma-separated list of ignored HTML tags\n  -H,  --span-hosts                go to foreign hosts when recursive\n  -L,  --relative                  follow relative links only\n  -I,  --include-directories=LIST  list of allowed directories\n       --trust-server-names        use the name specified by the redirection\n                                     URL'</span>s last component\n  -X,  --exclude-directories<span class=\"token operator\">=</span>LIST  list of excluded directories\n  -np, --no-parent                 don't ascend to the parent directory\n\nMail bug reports and suggestions to <span class=\"token operator\">&lt;</span>bug-wget@gnu.org<span class=\"token operator\">></span></code></pre></div>\n<h3>활용 예</h3>\n<p>영상 다운로드서버에 올라가있는 영상들이 정상적인지를 체크하기위해 한번씩 다운로드해준다.</p>\n<p><em>list.txt</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> http://111.111.11.1/assets/prod/1629/ORIGINAL/1629_1504176178478.ts\n http://111.111.11.1/assets/prod/1630/ORIGINAL/1630_1504176206826.ts\n http://1111.111.11.1/assets/prod/1672/ORIGINAL/1672_1505466475322.ts\n 엄청많아 100개가 넘어 ..</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ wget -i list.txt -o log --no-verbose</code></pre></div>\n<p>list에 써져있는 파일들을 차례대로 다운로드한 후 로그를 남긴다(성공여부만 필요)</p>\n<p>-i 인풋\n-o 아웃풋\n—no-verbose 다 남길 필요없다.</p>\n<p><em>log</em></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2017-12-22 17:17:53 URL:http://111.111.11.1/assets/prod/1629/ORIGINAL/1629_1504176178478.ts [16958540/16958540] -> \"1629_1504176178478.ts.2\" [1]\n2017-12-22 17:17:56 URL:http://111.111.11.1/assets/prod/1630/ORIGINAL/1630_1504176206826.ts [32955836/32955836] -> \"1630_1504176206826.ts.2\" [1]\n2017-12-22 17:17:59 URL:http://111.111.11.1/assets/prod/1672/ORIGINAL/1672_1505466475322.ts [32954520/32954520] -> \"1672_1505466475322.ts.2\" [1]\n2017-12-22 17:18:03 URL:http://111.111.11.1/assets/uplus-assets/prod/1686/ORIGINAL/1686_1505969267788.ts [32950572/32950572] -> \"1686_1505969267788.ts.2\" [1]\nhttp://111.111.11.1/assets/prod/1692/ORIGINAL/1692_1506023232326203376.ts:\n2017-12-22 17:18:03 ERROR 404: Not Found.\nFINISHED --2017-12-22 17:18:03--\nTotal wall clock time: 12s\nDownloaded: 4 files, 110M in 11s (9.61 MB/s)</code></pre></div>\n<p>없으면 저렇게 404 Not Found 뜬다.</p>\n<p>20개정도 브라우저에 입력하다가 빡쳐서 찾았다.</p>","frontmatter":{"title":"리눅스 wget 명령어","date":"December 22, 2017","description":null}},"previous":{"fields":{"slug":"/2017-10-26-js-interview-example/"},"frontmatter":{"title":"자바스크립트 코딩 인터뷰 정리"}},"next":{"fields":{"slug":"/2018-01-11-js-es6-three-dots/"},"frontmatter":{"title":"자바스크립트 3점 표기법"}}},"pageContext":{"id":"291842fb-173f-51f9-a089-54743192ffbc","previousPostId":"bdaaea0a-b8a2-58e6-9ab4-4463a5f97500","nextPostId":"5edc40e7-8669-5bc3-bf9b-b7721190e4e4"}},
    "staticQueryHashes": ["230163734","2841359383"]}