{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2017-10-10-js-not-duplicated-object-array/",
    "result": {"data":{"site":{"siteMetadata":{"title":"YH.K Logs"}},"markdownRemark":{"id":"b8f1961b-6e70-5b95-82ab-44090d2641bf","excerpt":"React, Vue, Angular 등 프론트엔드 프레임웍을 쓰면 Data에 따라 UI…","html":"<p>React, Vue, Angular 등 프론트엔드 프레임웍을 쓰면 Data에 따라 UI가 그려지기 때문에 어느정도 앱이 완성궤도에 올라오면 비지니스 로직 핸들링과 돔에 대한 퍼포먼스를 개선하는 성능최적화 작업이 대부분이다.</p>\n<!-- more -->\n<p>가상 돔을 쓰는 프레임웍이면 데이터의 흐름 및 변화에 따라 자동으로 렌더링을 돌기 때문에 구조를 왠만큼 꼬거나 뎁스가 3~4뎁스를 넘기는게 아니라면 쾌적한 성능을 보장한다.</p>\n<p>비지니스 로직데이터를 핸들링하는 일을 개선하다보면 필히 오브젝트 배열의 특정 키값을 기준으로 중복을 제거해야할 일이 생기는데 그에 대한 방법을 포스팅해본다.</p>\n<h3>언더스코어의 uniq 메소드를 이용하는 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Amir'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'surname'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Rahnama'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Amir'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'surname'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Stevens'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> non_duplidated_data <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">uniq</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<p><a href=\"http://underscorejs.org/\">언더스코어</a>를 사용한다면 위와 같이 구현할 수 있다.</p>\n<p>개인적으로 언더스코어 라이브러리를 사용해 본적이 없고, 구현하는데 시간이 많이 걸리는 코드가 아닌 이상 라이브러리를 사용하지 않는 편이기 때문에 사용한 적이 없는 방법이다.</p>\n<h3>ES6 문법 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getUniqueObjectArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item2<span class=\"token punctuation\">,</span> j</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> item2<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>코드가 단순하고 쉬우며 직관적이지만 <strong>ES6</strong>에서 지원하는 메소드이기 때문에 바벨로 트랜스파일을 해야하며, 경우에 따라 익스플로러를 지원해야할 경우 폴리필을 적용해야한다.</p>\n<p>프로젝트의 환경에 따라 위의 코드를 적용할지 말지 결정해야한다.</p>\n<h3>ES5 문법 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getUniqueObjectArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> tempArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> resultArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> item <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temArray<span class=\"token punctuation\">.</span><span class=\"token function\">include</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      resultArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      tempArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> resultArray<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>가장 단순한 방법이다. 양이 제법 길긴 하지만 해당 펑션을 처음 보더라도 코드의 가독성이 어렵지 않은 편이기에 충분히 이해할수 있다.\nES6를 사용하지 않았기 때문에 비교적 크로스 브라우징 문제에 안전하다고 볼 수 있다 :)</p>\n<h3>정리하며</h3>\n<p>위의 나온 세 방법만이 정답은 아니다.\n문법적으로 또는 이론적으로 이해가 어려운 방법들은 제외했으며 <strong>JSON.stringify</strong>같은 메소드가 들어가는 방법은 성능에 좋지 않을것 같아 마찬가지로 제외하였다.\n스택오버플로를 찾아보면 굉장히 다양한 방법이 있다. 참고하여 자신만의 메소드를 만들면 좋을것 같다.</p>\n<hr>\n<p>참고문서</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/36032179/remove-duplicates-in-an-object-array-javascript\">https://stackoverflow.com/questions/36032179/remove-duplicates-in-an-object-array-javascript</a></li>\n<li><a href=\"https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\">https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript</a></li>\n</ul>\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTk5MDUzMTU1LC0xMDkzMDI3Mjg2LDE5OT\nYxNTE4NzRdfQ==\n-->","frontmatter":{"title":"자바스크립트 오브젝트 배열 중복 삭제하기","date":"October 10, 2017","description":null}},"previous":{"fields":{"slug":"/2017-10-03-make-new-blog/"},"frontmatter":{"title":"헥소 블로그 삽질"}},"next":{"fields":{"slug":"/2017-10-10-js-clone-object/"},"frontmatter":{"title":"자바스크립트 객체 복사하기"}}},"pageContext":{"id":"b8f1961b-6e70-5b95-82ab-44090d2641bf","previousPostId":"e3d0554d-9f32-561b-9084-3bc9f92180c6","nextPostId":"cae4b708-fac7-56bc-9f00-0ed4af8242b1"}},
    "staticQueryHashes": ["230163734","2841359383"]}