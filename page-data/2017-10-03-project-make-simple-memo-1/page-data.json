{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2017-10-03-project-make-simple-memo-1/",
    "result": {"data":{"site":{"siteMetadata":{"title":"YH.K Logs"}},"markdownRemark":{"id":"3f40d581-c48a-5e73-9e96-b754e808a4a8","excerpt":"파이어베이스, 아이오닉을 이용하여 간단한 하이브리드 어플리케이션을 만들어봅시다. 간단한 메모장을 만듭시다. 파이어베이스, 아이오닉을 이용하여 간단한 하이브리드 어플리케이션을 만들어봅시다. 파이어베이스의 database, hosting(deploy), auth 등의 서비스와 ionic…","html":"<p>파이어베이스, 아이오닉을 이용하여 간단한 하이브리드 어플리케이션을 만들어봅시다.</p>\n<!-- more -->\n<h2>간단한 메모장을 만듭시다.</h2>\n<blockquote>\n<p>파이어베이스, 아이오닉을 이용하여 간단한 하이브리드 어플리케이션을 만들어봅시다. 파이어베이스의 database, hosting(deploy), auth 등의 서비스와 ionic에서 지원하는 컴포넌트를 적극적으로 사용하여 만들겁니다. Angular의 기본 이론보다, Ionic과 Firebase의 기능에 대해서 중점을 두시면 될 듯합니다.</p>\n</blockquote>\n<h2>사용기술</h2>\n<ul>\n<li>파이어베이스</li>\n<li><del>위지윅 에디터</del></li>\n<li>Angular2</li>\n<li>Ionic Framework</li>\n</ul>\n<p>포스트 1에서는 간단한 설치와, 로컬서버로 앱을 시작해보는 정도로 끝내겠습니다.</p>\n<h2>개발환경 세팅</h2>\n<h3>Node.js</h3>\n<p><a href=\"https://nodejs.org/en/\">NodeJS</a> 공식 사이트에서 LTS(Long-term support) 버전을 받아주세요.</p>\n<blockquote>\n<p>Node.js®는 Chrome V8 JavaScript 엔진으로 빌드된 JavaScript 런타임입니다. Node.js는 이벤트 기반, 논 블로킹 I/O 모델을 사용해 가볍고 효율적입니다. Node.js의 패키지 생태계인 npm은 세계에서 가장 큰 오픈 소스 라이브러리 생태계이기도 합니다.</p>\n</blockquote>\n<h3>Editor</h3>\n<p><a href=\"https://code.visualstudio.com/\">VSCode</a>를 깔아주세요. 따로 쓰는 IDE가 있으신 분들은 건너 뛰셔도 됩니다. 툴을 까신 다음 아래 두개의 익스텐션을 다운받아주세요.</p>\n<ul>\n<li>Auto Close Tag\n<code class=\"language-text\">html</code>에서 태그를 자동으로 닫아주는 패키지입니다</li>\n<li>Auto Import\n<code class=\"language-text\">typescript</code>를 사용할 때 자동으로 임포트를 해주는 패키지입니다.</li>\n</ul>\n<h3>Install Global Node Packages</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g ionic cordova</code></pre></div>\n<p><code class=\"language-text\">ionic</code>과 <code class=\"language-text\">cordova</code>를 global 환경에 인스톨하여주세요. 좀 오래 걸립니다.</p>\n<blockquote>\n<p>npm은 node package manager의 준말입니다.</p>\n</blockquote>\n<h2>프로젝트를 만드세요</h2>\n<p>프로젝트를 생성할 폴더에서 shell 또는 cmd를 키신 후 다음의 명령어를 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ionic start memo blank</code></pre></div>\n<p>memo는 프로젝트의 이름입니다. 빈 프로젝트를 만들거라서 blank 옵션을 줍니다.</p>\n<blockquote>\n<p>ionic &#x3C;명령어> &#x3C;이름> &#x3C;옵션> 순서가 되겠네요.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">memo\n├─hooks\n├─resources\n│  ├─android\n│  │  ├─icon\n│  │  └─splash\n│  └─ios\n│      ├─icon\n│      └─splash\n├─src\n│  ├─app\n│  ├─assets\n│  │  └─icon\n│  ├─pages\n│  │  └─home\n│  └─theme\n└─www</code></pre></div>\n<p>지금까지 잘 따라오셨다면 위와 같은 폴더구조의 프로젝트가 나올겁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> memo\nionic serve</code></pre></div>\n<p>명령어를 입력하여주세요.</p>\n<p><img src=\"/images/memo1.png\" alt=\"최초 실행 모습\"></p>\n<hr>\n<p>참고 링크</p>\n<ul>\n<li><a href=\"https://github.com/ddalpange/simple-memo\">해당 포스트에 작성된 모든 코드는 여기에 있습니다!</a></li>\n<li><a href=\"https://memo-28314.firebaseapp.com\">해당 프로젝트는 여기서 볼 수 있습니다 !!</a></li>\n</ul>","frontmatter":{"title":"간단한 메모장 만들기 1","date":"October 03, 2017","description":null}},"previous":{"fields":{"slug":"/2017-10-03-js-immutable-mutable/"},"frontmatter":{"title":"자바스크립트 불변과 가변"}},"next":{"fields":{"slug":"/2017-10-03-project-make-simple-memo-2/"},"frontmatter":{"title":"간단한 메모장 만들기 2 - 프로토타이핑"}}},"pageContext":{"id":"3f40d581-c48a-5e73-9e96-b754e808a4a8","previousPostId":"cd75c0ef-1eaf-5c74-bbd7-8f14ccb792db","nextPostId":"f934ed46-017a-5fa1-8aa3-e99db711b61b"}},
    "staticQueryHashes": ["230163734","2841359383"]}