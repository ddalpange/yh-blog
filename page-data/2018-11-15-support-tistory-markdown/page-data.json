{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-11-15-support-tistory-markdown/",
    "result": {"data":{"site":{"siteMetadata":{"title":"YH.K Logs"}},"markdownRemark":{"id":"b845ca1e-c52f-51c1-960a-9fc6238c3022","excerpt":"원래 블로그를 hexo로 운영하고 있었는데 아래와 같은 이유때문에 티스토리로 이전했다. 이미지를 넣기 매우매우 귀찮다 (일일이 asset폴더에 저장한 후, 경로를 써주어야한다) hexo 개발환경을 갖추어야한다. (개발환경이 안맞춰진 PC…","html":"<p>원래 블로그를 hexo로 운영하고 있었는데 아래와 같은 이유때문에 티스토리로 이전했다.</p>\n<!-- more -->\n<ul>\n<li>이미지를 넣기 매우매우 귀찮다 (일일이 asset폴더에 저장한 후, 경로를 써주어야한다)</li>\n<li>hexo 개발환경을 갖추어야한다. (개발환경이 안맞춰진 PC에서는 빌드 및 배포를 할수가 없다)</li>\n<li>잡다한 에러가 매우매우 많다.</li>\n<li>빌드할때마다 nvm으로 노드 버전을 바꾸어줘야한다.</li>\n<li>생각보다 검색 최적화가 이루어지지 않는다. (지킬을 쓸때는 꽤 많이 들어오는 편이었는데. 이상하게 hexo같은 경우는 유입이 거의 없었다.)</li>\n</ul>\n<p>마크다운을 포기하고 싶지 않았기 때문에. 티스토리에서 마크다운을 지원하게 할 수 있도록 바꾸고싶었다. 구글에 검색해보니 다른 사람들이 작업한 방법은</p>\n<ol>\n<li>CDN으로 github-markdown.css 를 내려받는다.</li>\n<li>별도의 마크다운 편집기를 사용하여 글을 작성한 후. html을 export한다.</li>\n</ol>\n<p>위 두 과정이었다.\n내가 헥소로 넘어온 이유는 이미지를 넣기 귀찮아서인데, 별도의 마크다운 편집기를 사용해야한다면 티스토리를 사용할 이유가 없다. 직접 코드를 작성하기 시작했다.</p>\n<ol>\n<li>CDN이어야한다. 별도로 js,css파일을 업로드하기 귀찮다.</li>\n<li>티스토리편집기의 장점과, 마크다운의 장점을 골고루 혼용할 수 있어야한다.</li>\n</ol>\n<p>그래서 아래와 같이 코드를 작성하여 기존 티스토리 편집기에서 마크다운을 지원하도록 바꾸었다.\n테마 html 편집하기에서 아래 코드를 붙여넣기하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"htmlmarkup\"><pre class=\"language-htmlmarkup\"><code class=\"language-htmlmarkup\">&lt;!-- css --&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/2.10.0/github-markdown.css&quot; /&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/themes/prism.min.css&quot; /&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/toolbar/prism-toolbar.min.css&quot; /&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/line-numbers/prism-line-numbers.min.css&quot; /&gt;\n&lt;!-- js --&gt;\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/marked/marked.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/prism.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/toolbar/prism-toolbar.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/line-numbers/prism-line-numbers.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-markup.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-c.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-typescript.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-scss.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-sass.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-css.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-javascript.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-json.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-python.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/prism/1.15.0/components/prism-jsx.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\ntry {\n  var article = $(&quot;.tt_article_useless_p_margin&quot;);\n  article[0].className += &quot; markdown-body&quot;;\n  var childs = article.children();\n  var results = [];\n\n  for(var i = 0; i &lt; childs.length; i++) {\n    var child = childs[i];\n\n    if (child.tagName === &quot;P&quot;) {\n      if (child.children[0] &amp;&amp; child.children[0].tagName === &quot;BR&quot;) {\n        results.push(&quot;&quot;);\n\n      } else {\n        results.push(child.innerText)\n\n      }\n    } else {\n      results.push(child);\n\n    }\n\n    child.remove();\n\n  }\n\n  var string = &quot;&quot;;\n\n  for (var i = 0; i &lt; results.length; i++) {\n    var result = results[i];\n\n    if (typeof result === &quot;string&quot;) {\n      string += result + &quot;\\n&quot;;\n\n    }  else {\n      article.append(marked(string));\n      string = &quot;&quot;;\n      article.append(result);\n\n    }\n  }\n\n  if (string) {\n    article.append(marked(string));\n  }\n} catch (e) {\n  console.error(e);\n}\n&lt;/script&gt;\n</code></pre></div>\n<p>대충 만든 코드를 정리하고 <strong>TOC</strong>를 적용해보자.\n<strong>TOC</strong>는 Table of Contents의 줄임말로 목차라고 생각하면 된다.</p>\n<p>markedJS에서 렌더러를 통해 마크다운을 엘리먼트로 변환하는 중간 과정에 hook을 걸 수 있다.\nh1 ~ h6 엘리먼트에 훅을 걸고 본문의 맨 앞에 <strong>TOC</strong>를 삽입하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token keyword\">var</span> toc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> article <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".tt_article_useless_p_margin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">prepareTOC</span><span class=\"token punctuation\">(</span>toc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">insertTOC</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">,</span> toc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">insertTOC</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">article<span class=\"token punctuation\">,</span> toc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"목차\\n========\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> firstLebel <span class=\"token operator\">=</span> toc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> toc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>level <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> toc<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> toc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> tabs <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> firstLebel<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> link<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      tabs <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    tabs <span class=\"token operator\">+=</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">+=</span> tabs <span class=\"token operator\">+</span> <span class=\"token string\">\" [\"</span><span class=\"token operator\">+</span> link<span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"](#\"</span> <span class=\"token operator\">+</span> link<span class=\"token punctuation\">.</span>anchor <span class=\"token operator\">+</span> <span class=\"token string\">\")\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  result <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\n\\n\"</span>\n    \n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toc<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     article<span class=\"token punctuation\">.</span><span class=\"token function\">prepend</span><span class=\"token punctuation\">(</span><span class=\"token function\">marked</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">article</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  article<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">+=</span> <span class=\"token string\">\" markdown-body\"</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">var</span> childs <span class=\"token operator\">=</span> article<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> results <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> child <span class=\"token operator\">=</span> childs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">\"P\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> child<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">\"BR\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        results<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        results<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      results<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    child<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> results<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> results<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> result <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      string <span class=\"token operator\">+=</span> result <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      article<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">marked</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      string <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n      article<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    article<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">marked</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">prepareTOC</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> renderer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">marked<span class=\"token punctuation\">.</span>Renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">heading</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> raw</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> anchor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n    toc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      anchor<span class=\"token operator\">:</span> anchor<span class=\"token punctuation\">,</span>\n      level<span class=\"token operator\">:</span> level<span class=\"token punctuation\">,</span>\n      text<span class=\"token operator\">:</span> text\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;h'</span>\n      <span class=\"token operator\">+</span> level\n      <span class=\"token operator\">+</span> <span class=\"token string\">' id=\"'</span>\n      <span class=\"token operator\">+</span> anchor\n      <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span>\n      <span class=\"token operator\">+</span> text\n      <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/h'</span>\n      <span class=\"token operator\">+</span> level\n      <span class=\"token operator\">+</span> <span class=\"token string\">'>\\n'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  marked<span class=\"token punctuation\">.</span><span class=\"token function\">setOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    renderer<span class=\"token operator\">:</span> renderer\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"https://github.com/markedjs/marked\">MarkedJS</a>와 <a href=\"https://github.com/PrismJS/prism\">PrismJS</a>를 사용하였다.</p>\n<p>기존 티스토리 편집기에서 마크다운을 붙여넣다보니 다양한 문제들이 있다.</p>\n<ol>\n<li>포스트 리스트에서 포스트 요약 내용을 마크다운으로 변환할 수 없다. 개행문자를 없앤채로 서버에서 내려오기 때문에 어디서 개행이 되었는지 알 수가 없기 때문.</li>\n<li>복붙하는 과정에서 편집기에서는 이상이 없으나, HTML보기를 체크하면 이상한 태그나 CSS가 먹어져 있는 경우가 많다.</li>\n<li>마크다운을 고려하지 않은 테마가 있기 때문에, github-markdown.css를 적용하더라도 눈으로 보고 css를 고쳐주어야한다.</li>\n<li>글을 작성할 때 마크다운 하이라이팅을 사용할 수 없다.</li>\n</ol>\n<p>1번의 경우 고객센터를 통해 수정을 요구한 상태인데, 적용이 될지 안될지 모르겠다.</p>\n<p>좀 더 사용해보고 문제를 픽스한 후, 오픈소스로 배포할 예정이다</p>\n<!--stackedit_data:\neyJoaXN0b3J5IjpbMzIxMDMzODUyLC0yNTU1ODc5NzUsLTI1MD\nA3NTgyMF19\n-->","frontmatter":{"title":"티스토리에서 마크다운 지원하기","date":"November 15, 2018","description":null}},"previous":{"fields":{"slug":"/2018-08-21-rxjs-whatisrxjs/"},"frontmatter":{"title":"RxJS란 무엇인가?"}},"next":{"fields":{"slug":"/2018-11-15-ubuntu-18-0-4-hangul-and-devenv-setup/"},"frontmatter":{"title":"Ubuntu 18.04 개발환경, 한글 세팅하기"}}},"pageContext":{"id":"b845ca1e-c52f-51c1-960a-9fc6238c3022","previousPostId":"c2a32b02-3607-5ff6-877c-8c667e0f75ae","nextPostId":"f4635170-8a0d-5e79-9a61-2a1e16205cfa"}},
    "staticQueryHashes": ["230163734","2841359383"]}